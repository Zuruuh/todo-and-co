version: "3.7"

services:
  nginx:
    build:
      args:
        VERSION: $NGINX_VERSION
      context: .
      dockerfile: ./docker/prod/nginx/Dockerfile
    depends_on:
      - php
    ports:
      - "8000:80"
    volumes:
      - ".:/app:ro"

  php:
    environment:
      - APP_ENV=prod
    build:
      args:
        VERSION: $PHP_VERSION
      context: ./
      dockerfile: ./docker/prod/php/Dockerfile
    working_dir: /app
    volumes:
      - .:/app:rw
    restart: unless-stopped
    depends_on:
      - postgres

  node:
    environment:
      - NODE_ENV=prod
    build:
      args:
        VERSION: $NODE_VERSION
      context: .
      dockerfile: ./docker/prod/node/Dockerfile
    working_dir: /app
    volumes:
      - .:/app:rw
    command: sh -c 'yarn install && yarn build'

  postgres:
    build:
      args:
        VERSION: $PGSQL_VERSION
      context: .
      dockerfile: ./docker/prod/postgres/Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-symfony}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
      POSTGRES_HOST_AUTH_METHOD: password
    volumes:
      - database:/var/lib/postgresql
    expose:
      - 5432

volumes:
  database: ~
